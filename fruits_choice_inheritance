//class apple
package com.app.fruits;

public class Apple extends Fruit {
    public Apple(String name, double weight, String color) {
        super(name, weight, color);
    }

    @Override
    public String taste() {
        return "sweet n sour";
    }
}
//class Mango
package com.app.fruits;

public class Mango extends Fruit {
    public Mango(String name, double weight, String color) {
        super(name, weight, color);
    }

    @Override
    public String taste() {
        return "sweet";
    }
}
//class Orange
package com.app.fruits;

public class Orange extends Fruit {
    public Orange(String name, double weight, String color) {
        super(name, weight, color);
    }

    @Override
    public String taste() {
        return "sour";
    }
}
//class Fruit
package com.app.fruits;

public class Fruit {
    private String name;
    private String color;
    private double weight;
    private boolean isFresh;

    public Fruit(String name, double weight, String color) {
        this.name = name;
        this.weight = weight;
        this.color = color;
        this.isFresh = true; 
    }

    public String getName() {
        return name;
    }

    public boolean isFresh() {
        return isFresh;
    }

    public void setFresh(boolean fresh) {
        this.isFresh = fresh;
    }

    public String taste() {
        return "no specific taste";
    }

    @Override
    public String toString() {
        return "Fruit{name='" + name + "', color='" + color + "', weight=" + weight + "}";
    }
}
//class FruitBasket
package com.app.fruits;

import java.util.Scanner;

public class FruitBasket {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter basket size: ");
        Fruit[] basket = new Fruit[sc.nextInt()];
        int counter = 0;
        boolean exit = false;

        while (!exit) {
            System.out.println("\nOptions:\n0. Exit\n1. Add Mango\n2. Add Orange\n3. Add Apple");
            System.out.println("4. Display names of all fruits");
            System.out.println("5. Display details & taste of all fresh fruits");
            System.out.println("6. Mark a fruit as stale");
            System.out.println("7. Display tastes of all stale fruits");
            System.out.print("Choice: ");
            int choice = sc.nextInt();
            sc.nextLine(); 

            switch (choice) {
                case 0:
                    exit = true;
                    break;

                case 1: 
                    if (counter < basket.length) {
                        System.out.print("Enter name, weight, color: ");
                        String name = sc.next();
                        double wt = sc.nextDouble();
                        String color = sc.next();
                        basket[counter++] = new Mango(name, wt, color);
                    } else {
                        System.out.println("Basket full!");
                    }
                    break;

                case 2: 
                    if (counter < basket.length) {
                        System.out.print("Enter name, weight, color: ");
                        String name = sc.next();
                        double wt = sc.nextDouble();
                        String color = sc.next();
                        basket[counter++] = new Orange(name, wt, color);
                    } else {
                        System.out.println("Basket full!");
                    }
                    break;

                case 3: 
                    if (counter < basket.length) {
                        System.out.print("Enter name, weight, color: ");
                        String name = sc.next();
                        double wt = sc.nextDouble();
                        String color = sc.next();
                        basket[counter++] = new Apple(name, wt, color);
                    } else {
                        System.out.println("Basket full!");
                    }
                    break;

                case 4: 
                    System.out.println("Fruit Names in Basket:");
                    for (Fruit f : basket) {
                        if (f != null)
                            System.out.println(f.getName());
                    }
                    break;

                case 5:
                    System.out.println("Fresh Fruits Details:");
                    for (Fruit f : basket) {
                        if (f != null && f.isFresh()) {
                            System.out.println(f.toString() + ", Taste: " + f.taste());
                        }
                    }
                    break;

                case 6: 
                    System.out.print("Enter index to mark stale: ");
                    int idx = sc.nextInt();
                    if (idx >= 0 && idx < basket.length && basket[idx] != null) {
                        basket[idx].setFresh(false);
                        System.out.println("Marked fruit as stale.");
                    } else {
                        System.out.println("Invalid index!");
                    }
                    break;

                case 7: 
                    System.out.println("Stale Fruits Tastes:");
                    for (Fruit f : basket) {
                        if (f != null && !f.isFresh()) {
                            System.out.println(f.getName() + ": " + f.taste());
                        }
                    }
                    break;

                default:
                    System.out.println("Invalid option!");
            }
        }

        sc.close();
        System.out.println("Goodbye!");
    }
}


